package com.example.demo;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;

@Controller
public class CardController {

	@Autowired
    private CardRepository cardRepo;

//    @GetMapping("/cards")
//    public String getCards(Model model) {
//        List<Card> cardlist = cardRepo.findAll();
//        model.addAttribute("cardlist", cardlist);
//        return "card";
//    }
//    
    
    @GetMapping("/cards")
    public String getCards(Model model, @RequestParam(defaultValue = "0") int page, @RequestParam(defaultValue = "4") int size) {
        PageRequest pageable = PageRequest.of(page, size);
        Page<Card> cardPage = cardRepo.findAll(pageable);
        model.addAttribute("cardPage", cardPage);
        return "card";
    }
    

	
	@GetMapping("/cards/add")
	public String addItem(Model model) {
		model.addAttribute("card",new Card());
		List<Card> cardlist=cardRepo.findAll();
		model.addAttribute("cardlist",cardlist);
		return "add_card";
	}
	
	
	@PostMapping("/cards/save")
	public String saveItem(@Valid Card card,BindingResult bindingResult, @RequestParam("cardImage") MultipartFile imgFile,Model model) {
	if(bindingResult.hasErrors()) {
		List<Card> cardlist=cardRepo.findAll();
		model.addAttribute("cardlist",cardlist);
		return "add_card";
	}
	
	String imageName = imgFile.getOriginalFilename();
	// set the image name in item object
	card.setImage(imageName);
	// save the item obj to the db
	Card savedItem = cardRepo.save(card);
	try {
	// prepare the directory path
	String uploadDir = "uploads/cards/" + savedItem.getId();
	Path uploadPath = Paths.get(uploadDir);
	// check if the upload path exists, if not it will be created
	if (!Files.exists(uploadPath)) {
	Files.createDirectories(uploadPath);
	}
	// prepare path for file
	Path fileToCreatePath = uploadPath.resolve(imageName);
	System.out.println("File path: " + fileToCreatePath);
	// copy file to the upload location
	Files.copy(imgFile.getInputStream(), fileToCreatePath, StandardCopyOption.REPLACE_EXISTING);
	} catch (IOException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
	}
	cardRepo.save(card);
	return "redirect:/cards";
	}
    
    
    
}
