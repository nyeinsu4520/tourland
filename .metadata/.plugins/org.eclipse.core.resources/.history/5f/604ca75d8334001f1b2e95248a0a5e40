package com.example.demo;

import com.fasterxml.jackson.annotation.JsonFormat;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.OneToMany;
import jakarta.persistence.JoinColumn;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;


@Entity
public class TripPackage {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    private String name;
    private String description;

    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    private Date startDate;

    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    private Date endDate;

    @ManyToMany
    @JoinTable(
            name = "trippackage_hotel",
            joinColumns = @JoinColumn(name = "trip_package_id"),
            inverseJoinColumns = @JoinColumn(name = "hotel_id"))
    private Set<Card> availableHotels = new HashSet<>();

    @ManyToMany
    @JoinTable(
            name = "trippackage_restaurant",
            joinColumns = @JoinColumn(name = "trip_package_id"),
            inverseJoinColumns = @JoinColumn(name = "restaurant_id"))
    private Set<Restaurant> availableRestaurants = new HashSet<>();

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public Date getStartDate() {
		return startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	public Date getEndDate() {
		return endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	public Set<Card> getAvailableHotels() {
		return availableHotels;
	}

	public void setAvailableHotels(Set<Card> availableHotels) {
		this.availableHotels = availableHotels;
	}

	public Set<Restaurant> getAvailableRestaurants() {
		return availableRestaurants;
	}

	public void setAvailableRestaurants(Set<Restaurant> availableRestaurants) {
		this.availableRestaurants = availableRestaurants;
	}

    // Constructors, getters, and setters
    
}

