package com.example.demo;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

@Controller
@RequestMapping("/admin/trip-packages")
public class TripPackageController {

    @Autowired
    private CardRepository hotelRepository;

    @Autowired
    private RestaurantRespository restaurantRepository;

    @Autowired
    private TripPackageRepository tripPackageRepository;
    
    @Autowired
    private TripPackageService tripPackageService;

    @GetMapping("/create")
    public String showCreateForm(Model model) {
        model.addAttribute("tripPackage", new TripPackage());
        model.addAttribute("allHotels", hotelRepository.findAll());
        model.addAttribute("allRestaurants", restaurantRepository.findAll());
        return "TripPackage";
    }

    @PostMapping("/create")
    public String createTripPackage(@ModelAttribute TripPackage tripPackage) {
        Set<Card> selectedHotels = new HashSet<>();
        Set<Restaurant> selectedRestaurants = new HashSet<>();

        if (tripPackage.getHotelIds() != null) {
            for (Integer hotelId : tripPackage.getHotelIds()) {
                hotelRepository.findById(hotelId).ifPresent(selectedHotels::add);
            }
        }

        if (tripPackage.getRestaurantIds() != null) {
            for (Integer restaurantId : tripPackage.getRestaurantIds()) {
                restaurantRepository.findById(restaurantId).ifPresent(selectedRestaurants::add);
            }
        }

        tripPackage.setHotels(selectedHotels);
        tripPackage.setRestaurants(selectedRestaurants);

        tripPackageRepository.save(tripPackage);
        
        return "redirect:/admin/trip-packages/list";
    }
    
    
    @GetMapping("/list")
    public String showTripPackageList(Model model) {
        List<TripPackage> tripPackages = tripPackageRepository.findAll();
        model.addAttribute("tripPackages", tripPackages);
        return "TripPackageList";
    }
    
    
    @GetMapping("/book")
    public String showBookingForm(Model model) {
        List<TripPackage> tripPackages = tripPackageService.getAllTripPackages();
        model.addAttribute("tripPackages", tripPackages);
        model.addAttribute("selectedTripPackage", new TripPackage()); // initialize with a blank trip package
        return "TripBooking";
    }

    @GetMapping("/{id}/hotels")
    @ResponseBody
    public String getHotelsByTripPackage(@PathVariable("id") Long tripPackageId) {
        List<Card> hotels = tripPackageService.getHotelsByTripPackage(tripPackageId);
        StringBuilder options = new StringBuilder();
        for (Card hotel : hotels) {
            options.append("<option value=\"").append(hotel.getHotel_id()).append("\">").append(hotel.getTitle()).append("</option>");
        }
        return options.toString();
    }

    @GetMapping("/{id}/restaurants")
    @ResponseBody
    public String getRestaurantsByTripPackage(@PathVariable("id") Long tripPackageId) {
        List<Restaurant> restaurants = tripPackageService.getRestaurantsByTripPackage(tripPackageId);
        StringBuilder options = new StringBuilder();
        for (Restaurant restaurant : restaurants) {
            options.append("<option value=\"").append(restaurant. getRestaurant_id()).append("\">").append(restaurant.getTitle()).append("</option>");
        }
        return options.toString();
    }

}
