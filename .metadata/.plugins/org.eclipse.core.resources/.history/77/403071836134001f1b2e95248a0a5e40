package com.example.demo;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.NoSuchElementException;

@Service
public class TripPackageService {

    @Autowired
    private TripPackageRepository tripPackageRepository;

    @Autowired
    private HotelSelectionRepository hotelSelectionRepository;

    @Autowired
    private RestaurantSelectionRepository restaurantSelectionRepository;

    @Autowired
    private CardRepository cardRepository;

    @Autowired
    private RestaurantRespository restaurantRepository;

    public TripPackage createTripPackage(TripPackage tripPackage) {
        return tripPackageRepository.save(tripPackage);
    }

    public void addHotelToTripPackage(int tripPackageId, int hotelId) {
        TripPackage tripPackage = tripPackageRepository.findById(tripPackageId)
                .orElseThrow(() -> new NoSuchElementException("TripPackage not found"));
        Card hotel = cardRepository.findById(hotelId)
                .orElseThrow(() -> new NoSuchElementException("Hotel not found"));

        HotelSelection hotelSelection = new HotelSelection();
        hotelSelection.setTripPackage(tripPackage);
        hotelSelection.setHotel(hotel);
        hotelSelectionRepository.save(hotelSelection);
    }

    public void addRestaurantToTripPackage(int tripPackageId, int restaurantId) {
        TripPackage tripPackage = tripPackageRepository.findById(tripPackageId)
                .orElseThrow(() -> new NoSuchElementException("TripPackage not found"));
        Restaurant restaurant = restaurantRepository.findById(restaurantId)
                .orElseThrow(() -> new NoSuchElementException("Restaurant not found"));

        RestaurantSelection restaurantSelection = new RestaurantSelection();
        restaurantSelection.setTripPackage(tripPackage);
        restaurantSelection.setRestaurant(restaurant);
        restaurantSelectionRepository.save(restaurantSelection);
    }

    public List<TripPackage> getAllTripPackages() {
        return tripPackageRepository.findAll();
    }

    public TripPackage getTripPackageById(int tripPackageId) {
        return tripPackageRepository.findById(tripPackageId)
                .orElseThrow(() -> new NoSuchElementException("TripPackage not found"));
    }
}
