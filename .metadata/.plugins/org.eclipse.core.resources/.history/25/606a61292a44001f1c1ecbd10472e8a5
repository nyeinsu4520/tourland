package com.example.demo;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;

@Controller
public class HomeController {
	
	@Autowired
    private CardRepository cardRepo;
	@Autowired
    private RestaurantRespository RestaurantRepo;
	@Autowired
	private PackageRepository packageRepo;
	

    @Autowired
    private CardService cardService;
    @Autowired
    private MemberService memberService;
    @Autowired
    private PackageService packageService;
    @Autowired
    private ReviewPackageRepository reviewpackRepo;
    @Autowired
    private TripPackageRepository trippackageRepo;
    @Autowired 
    private ReviewRepository reviewhotelRepo;
    @Autowired
    private ReviewRestaurantRepository reviewrestaurantRepo;
    @Autowired
    private RestaurantService restaurantservice;
    @Autowired
    private ReviewTripPackageRepository reviewTripPackageRepo;
	

	
	
	@GetMapping("/403")
	public String error403() {
		return "403";
	}
	
	@GetMapping("/login")
	public String login() {
		return "Loginform";
	}
	
	
	@GetMapping("/")
	public String index(Model model) {
	    // Fetching data from repositories
	    List<Card> cardList = cardRepo.findAll();
	    List<Restaurant> restaurantList = RestaurantRepo.findAll();
	    List<Package> packageList = packageRepo.findAll();
	    List<ReviewPackage> reviewPackageList = reviewpackRepo.findAll();
	    List<TripPackage> tripPackages = trippackageRepo.findAll();
	    List<ReviewHotel> reviewHotelList = reviewhotelRepo.findAll();
	    List<ReviewTripPackage> reviewTripPackageList = reviewTripPackageRepo.findAll();

	    // Calculate average ratings for packages
	    Map<Integer, Double> averageRatings = new HashMap<>();
	    for (Package pkg : packageList) {
	        double avgRating = pkg.getReviewspackage().stream()
	            .mapToInt(ReviewPackage::getRating)
	            .average()
	            .orElse(0.0);
	        averageRatings.put(pkg.getPackage_id(), avgRating);
	    }

	    // Calculate average ratings for hotels
	    Map<Integer, Double> averageRatingsHotel = new HashMap<>();
	    for (Card card : cardList) {
	        double avgRating = card.getReviewshotel().stream()
	            .mapToInt(ReviewHotel::getRating)
	            .average()
	            .orElse(0.0);
	        averageRatingsHotel.put(card.getHotel_id(), avgRating);
	    }

	    // Calculate average ratings for trip packages
	    Map<Long, Double> averageRatingsTripPackage = new HashMap<>();
	    for (TripPackage tripPackage : tripPackages) {
	        double avgRating = tripPackage.getReviewsTripPackage().stream()
	            .mapToInt(ReviewTripPackage::getRating)
	            .average()
	            .orElse(0.0);
	        averageRatingsTripPackage.put(tripPackage.getId(), avgRating);
	    }

	    // Adding attributes to the model
	    model.addAttribute("cardList", cardList);
	    model.addAttribute("restaurantList", restaurantList);
	    model.addAttribute("packageList", packageList);
	    model.addAttribute("reviewPackageList", reviewPackageList);
	    model.addAttribute("averageRatings", averageRatings);
	    model.addAttribute("reviewHotelList", reviewHotelList);
	    model.addAttribute("averageRatingsHotel", averageRatingsHotel);
	    model.addAttribute("tripPackages", tripPackages);
	    model.addAttribute("averageRatingsTripPackage", averageRatingsTripPackage);

	    // Returning the view name
	    return "index";
	}

}
