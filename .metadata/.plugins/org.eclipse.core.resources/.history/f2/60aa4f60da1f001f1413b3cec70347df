package com.example.demo;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;

@Controller
public class RestaurantController {

	@Autowired
    private RestaurantRepository RestaurantRepo;

    @GetMapping("/index")
    public String getCards(Model model) {
        List<Restaurant> restaurantlist = RestaurantRepo.findAll();
        model.addAttribute("restaurantlist", restaurantlist);
        return "index";
    }
    


	
	@GetMapping("/restaurant/add")
	public String addItem(Model model) {
		model.addAttribute("restaurant",new Restaurant());
		List<Restaurant> restaurantlist=RestaurantRepo.findAll();
		model.addAttribute("restaurantlist",restaurantlist);
		return "add_restaurant";
	}
	
	
	@PostMapping("/restaurant/save")
	public String saveItem(@Valid Restaurant restaurant,BindingResult bindingResult, @RequestParam("restaurantImage") MultipartFile imgFile,Model model) {
	if(bindingResult.hasErrors()) {
		List<Restaurant> restaurantlist=restaurantRepo.findAll();
		model.addAttribute("restaurantlist",restaurantlist);
		return "add_restaurant";
	}
	
	String imageName = imgFile.getOriginalFilename();
	// set the image name in item object
	restaurant.setImage(imageName);
	// save the item obj to the db
	Card savedItem = RestaurantRepo.save(retaurant);
	try {
	// prepare the directory path
	String uploadDir = "uploads/restaurants/" + savedItem.getId();
	Path uploadPath = Paths.get(uploadDir);
	// check if the upload path exists, if not it will be created
	if (!Files.exists(uploadPath)) {
	Files.createDirectories(uploadPath);
	}
	// prepare path for file
	Path fileToCreatePath = uploadPath.resolve(imageName);
	System.out.println("File path: " + fileToCreatePath);
	// copy file to the upload location
	Files.copy(imgFile.getInputStream(), fileToCreatePath, StandardCopyOption.REPLACE_EXISTING);
	} catch (IOException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
	}
	RestaurantRepo.save(restaurant);
	return "redirect:/index";
	}
    
    
    
}
