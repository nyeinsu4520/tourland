package com.example.demo;

import java.time.LocalDate;
import java.time.LocalDateTime;

import org.springframework.beans.factory.annotation.Autowired;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;

@Entity
public class Booking {
	
	
    public enum Status {
        PENDING,
        CONFIRMED,
        REJECTED
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int booking_id;
    
    @ManyToOne
    @JoinColumn(name = "member_id")
    private Member member;

    @ManyToOne
    @JoinColumn(name = "package_id")
    private Package pkg;
    
    private String name;
    private String email;
    private String country;
    private String phone;
    private String notes;
    private LocalDate selectedDate;
    private int selectedPassengers;
    private Status status;
    
    @Autowired
    private notificationRepository notificationRepository;
    
    

	
	
	public int getBooking_id() {
		return booking_id;
	}
	public void setBooking_id(int booking_id) {
		this.booking_id = booking_id;
	}
	public Member getMember() {
		return member;
	}
	public void setMember(Member member) {
		this.member = member;
	}
	public Package getPkg() {
		return pkg;
	}
	public void setPkg(Package pkg) {
		this.pkg = pkg;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	public String getCountry() {
		return country;
	}
	public void setCountry(String country) {
		this.country = country;
	}
	public String getPhone() {
		return phone;
	}
	public void setPhone(String phone) {
		this.phone = phone;
	}
	public String getNotes() {
		return notes;
	}
	public void setNotes(String notes) {
		this.notes = notes;
	}
	public LocalDate getSelectedDate() {
		return selectedDate;
	}
	public void setSelectedDate(LocalDate selectedDate) {
		this.selectedDate = selectedDate;
	}
	public int getSelectedPassengers() {
		return selectedPassengers;
	}
	public void setSelectedPassengers(int selectedPassengers) {
		this.selectedPassengers = selectedPassengers;
	}

	public Status getStatus() {
		return status;
	}
	public void setStatus(Status status) {
		this.status = status;
		createNotification(status);
	}
	
	private void createNotification(Status status) {
        notification notification = new notification();
        notification.setRecipient(this.email); // Assuming email is recipient identifier
        notification.setTimestamp(LocalDateTime.now());
        
        if (status == Status.CONFIRMED) {
            notification.setMessage("Your booking has been confirmed.");
        } else if (status == Status.REJECTED) {
            notification.setMessage("Your booking has been rejected.");
        } else {
            notification.setMessage("There is an update regarding your booking.");
        }

        notificationRepository.save(notification);
    }
   
}
